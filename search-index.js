var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","error","template_name","target_path","max_depth","Max depth that should be copied","bts::args","try_from","try_into","borrow","borrow_mut","type_id","bts::error","typeid","registerargs","formatter","from_clap","argmatches","RegisterArgs"];

searchIndex["bts"]={"doc":E,"i":[[5,"new","bts","Instantiate snippet at given location",N,[[["asref",["path"]],["path"],["newargs"]],[[R[1]],[R[0],[R[1]]]]]],[5,"register",E,"Register a new snippet",N,[[["asref",["path"]],["path"],[R[14]]],[[R[1]],[R[0],[R[1]]]]]],[0,"args",E,E,N,N],[3,"Args",R[6],"Generate file snippets at will",N,N],[12,"config_location",E,"Location of snippets storage",0,N],[12,"command",E,E,0,N],[3,"NewArgs",E,E,N,N],[12,"with_parent",E,"Spawn with whole path leading to given snippet",1,N],[12,R[2],E,"Path to snippet",1,N],[12,R[3],E,"Target dir, `pwd` by default",1,N],[12,R[4],E,R[5],1,N],[3,R[18],E,E,N,N],[12,R[2],E,"New snippet name",2,N],[12,R[3],E,"Path to single file or directory from which contents new…",2,N],[12,"append",E,"Don't delete previous snippet when creating new one, only…",2,N],[12,R[4],E,R[5],2,N],[4,"Command",E,E,N,N],[13,"New",E,"Instantiate a snippet",3,N],[13,"Register",E,"Create new snippet",3,N],[11,"default_template_folder",E,E,0,[[],["str"]]],[0,R[1],"bts",E,N,N],[4,"Error",R[12],E,N,N],[13,"CopyError",E,E,4,N],[13,"Lookup",E,E,4,N],[13,"EmptyDirectory",E,E,4,N],[13,"MissingFilename",E,E,4,N],[11,"into",R[6],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[0]]]],[11,R[8],E,E,0,[[],[R[0]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[13]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[0]]]],[11,R[8],E,E,1,[[],[R[0]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[13]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[0]]]],[11,R[8],E,E,2,[[],[R[0]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[13]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[7],E,E,3,[[[U]],[R[0]]]],[11,R[8],E,E,3,[[],[R[0]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[13]]]],[11,"into",R[12],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"to_string",E,E,4,[[["self"]],["string"]]],[11,R[7],E,E,4,[[[U]],[R[0]]]],[11,R[8],E,E,4,[[],[R[0]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[13]]]],[11,"default",R[6],E,1,[[],["newargs"]]],[11,"default",E,E,2,[[],[R[14]]]],[11,"fmt",R[12],E,4,[[["self"],[R[15]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[15]]],[R[0]]]],[11,"clap",R[6],E,0,[[],["app"]]],[11,R[16],E,E,0,[[[R[17]]],["self"]]],[11,"clap",E,E,3,[[],["app"]]],[11,R[16],E,E,3,[[[R[17]]],["self"]]],[11,"clap",E,E,1,[[],["app"]]],[11,R[16],E,E,1,[[[R[17]]],["self"]]],[11,"clap",E,E,2,[[],["app"]]],[11,R[16],E,E,2,[[[R[17]]],["self"]]]],"p":[[3,"Args"],[3,"NewArgs"],[3,R[18]],[4,"Command"],[4,"Error"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);